"use strict";function _toConsumableArray(a){return _arrayWithoutHoles(a)||_iterableToArray(a)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(a){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a))return Array.from(a)}function _arrayWithoutHoles(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}var timerSimulator,degree=function(a){return a*Math.PI/180},Cube=function(){function a(){var b=this;_classCallCheck(this,a),this.constructCube=function(){var a=new THREE.GLTFLoader;a.load("./megaminx.glb",function(a){a.scene.scale.set(20,20,20),b.planes=a.scene.children.filter(function(a){return-1!==a.name.indexOf("plane")}),b.planes.forEach(function(a){a.material.visible=!1}),scene.add(a.scene),a.animations,a.scene,a.scenes,a.cameras,a.asset},function(){},function(){})},this.destructCube=function(){b.getAllPieces().forEach(function(a){return scene.remove(a)})},this.makeTransformToAllChildren=function(a,b){a.children.forEach(function(a){a.geometry.applyMatrix(b),a.position.set(0,0,0),a.rotation.set(0,0,0),a.scale.set(1,1,1),a.updateMatrix()})},this.getAllPieces=function(){return scene.children.find(function(a){return"Scene"===a.name}).children.filter(function(a){return-1!==a.name.indexOf("Cube")})},this.getCenterPointOfPiece=function(a){var b=new THREE.Box3().setFromObject(a),c=b.getBoundingSphere();return c.center},this.getCenterPointOfPlane=function(a){var b=a.geometry;b.computeBoundingBox();var c=b.boundingBox.getCenter();return a.localToWorld(c),c},this.checkCollisionOfVerticalPlane=function(){b.planeV.updateMatrixWorld();var a=b.planeV.geometry.vertices[0].clone();a.applyMatrix4(b.planeV.matrixWorld);var c=b.planeV.geometry.vertices[2].clone();c.applyMatrix4(b.planeV.matrixWorld);var d=[a,c].some(function(a){var c=new THREE.Raycaster(a,new THREE.Vector3(0,0,-1).normalize()),d=c.intersectObjects(b.getAllPieces(),!0);return d.some(function(a){return a.object.parent})});return d},this.getSurfaceAreaOfTriangle=function(a,b){var c=b[a.a],d=b[a.b],e=b[a.c],f=new THREE.Triangle(c,d,e);return f.area()},this.getNormalOfPlane=function(a){var c=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1];a.updateMatrixWorld();var d,e=new THREE.Geometry().fromBufferGeometry(a.geometry);if(c){var g=0;e.faces.forEach(function(c){var f=b.getSurfaceAreaOfTriangle(c,e.vertices);f>g&&(d=c,g=f)})}else d=e.faces[0];var f=d.normal.clone();return f.applyMatrix4(a.matrixWorld),f.normalize()},this.getNormalOfFace=function(a){var b=a.normal.clone();return b.normalize()},this.getAllPiecesBehindThePlane=function(a){var c=a.plane,d=a.inverse,e=b.getNormalOfPlane(c),f=b.getCenterPointOfPlane(c),g=b.getAllPieces().filter(function(a){var c=b.getCenterPointOfPiece(a),g=e.dot(c.sub(f));if(d){if(0<g)return!0;}else if(0>g)return!0});return g},this.applyTransformations=function(){b.getAllPieces().forEach(function(a){a.children.forEach(function(a){a.updateMatrix(),a.geometry.applyMatrix(a.matrix),a.position.set(0,0,0),a.rotation.set(0,0,0),a.scale.set(1,1,1),a.updateMatrix()}),a.updateMatrix()})},this.rotateVertical=function(){var a=!!(0<arguments.length&&void 0!==arguments[0])&&arguments[0],c=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],d=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2];if(b.undoState=[b.rotateVertical,[!a,c]],!(b.checkCollisionOfVerticalPlane()||b.animating)){b.applyTransformations();var e=b.getAllPiecesBehindThePlane(c),f=b.getNormalOfPlane(),g=b.getCenterPointOfPlane(b.planeV),h=180,i=0;if(b.animating=!0,d)e.forEach(function(c){b.rotateAboutPoint(c,g,f.normalize(),(a?-1:1)*degree(h),!0),b.animating=!1});else var j=setInterval(function(){i++,e.forEach(function(c){b.rotateAboutPoint(c,g,f.normalize(),(a?-1:1)*degree(h/10),!0)}),10<=i&&(clearInterval(j),b.animating=!1)},isMobile?0:50)}},this.undo=function(){if(b.undoState.length){var a;(a=b.undoState)[0].apply(a,_toConsumableArray(b.undoState[1])),b.undoState=[]}},this.rotateZ30=new THREE.Matrix4().makeRotationZ(degree(10)),this.rotateZ30NoAnimation=new THREE.Matrix4().makeRotationZ(degree(30)),this.rotateZ30Anti=new THREE.Matrix4().makeRotationZ(degree(-10)),this.rotateZ30AntiNoAnimation=new THREE.Matrix4().makeRotationZ(degree(-30)),this.animating=!1,camera.position.z=120,this.constructCube(),this.undoState=[],this.planes=[]}return _createClass(a,[{key:"rotateAboutPoint",value:function rotateAboutPoint(a,b,c,d,e){a.children.forEach(function(a){e=void 0!==e&&e,e&&a.parent.localToWorld(a.position),a.position.sub(b),a.position.applyAxisAngle(c,d),a.position.add(b),e&&a.parent.worldToLocal(a.position),a.rotateOnAxis(c,d)}),this.applyTransformations()}}]),a}(),cube=new Cube,verticalRotated=!1,simulate=function(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:isMobile?100:200,b=[cube.rotateBottom,cube.rotateMiddle,cube.rotateTop];timerSimulator=setInterval(function(){var c=cube.checkCollisionOfVerticalPlane(),d=Math.round(10*Math.random())%b.length;c||verticalRotated?(b[d](!0,!0),verticalRotated=!1):(cube.rotateVertical(!0,!0,!0),verticalRotated=!0),a-=1,0===a&&clearInterval(timerSimulator)})};